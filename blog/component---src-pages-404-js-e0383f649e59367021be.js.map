{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Recents.js","webpack:///./src/components/Sidemenu.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Recents","react_default","gatsby_browser_entry","recentQuery","postesito","allMarkdownRemark","edges","dataList","map","node","push","style","marginTop","display","width","divider","border","list","itemLayout","dataSource","renderItem","item","Item","Meta","to","fields","slug","frontmatter","_2138858922","Sidemenu","Card","id","className","row","col","span","href","target","icon","type","fontSize","components_Recents","Header","Menu","SubMenu","Layout","Content","Footer","Sider","MainLayout","state","current","handleClick","e","_this$props","pageNumber","split","filter","Boolean","pop","match","layout","position","background","padding","lineHeight","menu","theme","mode","onClick","selectedKeys","defaultSelectedKeys","WebkitBoxShadow","color","key","textDecoration","float","lg","borderRight","paddingLeft","paddingRight","margin","minHeight","textAlign","src_components_Sidemenu","back_top","Date","getFullYear","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-e0383f649e59367021be.js","sourcesContent":["import React from 'react'\r\n\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/seo'\r\n\r\nclass NotFoundPage extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"404: Not Found\" />\r\n        <h1>Not Found</h1>\r\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\r\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    'a.gatsby-resp-image-link': {\r\n      boxShadow: `none`,\r\n    },\r\n  }\r\n}\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\nconst typography = new Typography(Wordpress2016)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport { StaticQuery, graphql, Link } from 'gatsby'\r\nimport {List, Divider} from 'antd'\r\n\r\n\r\nclass Recents extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <StaticQuery\r\n            query={recentQuery}\r\n            render={data => {\r\n                const postesito = data.allMarkdownRemark.edges                  \r\n                    var dataList = [];\r\n\r\n                    {postesito.map(({ node }) => {     \r\n                        dataList.push (node)\r\n                    })} \r\n                    \r\n                    return (\r\n                        <div style={{marginTop: '24px', display: 'inline-block', width: '90%'}}>\r\n                            <h4>Artículos recientes</h4>\r\n                            <Divider style={{border: '2px solid #ebedf0'}}/>\r\n                            <List\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={dataList}\r\n                                style={{marginTop: '30px'}}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                    <List.Item.Meta\r\n                                        \r\n                                        title={ \r\n                                            <Link style={{ boxShadow: 'none' }} to={item.fields.slug}>\r\n                                                {item.frontmatter.title}\r\n                                            </Link>   \r\n                                        }\r\n                                        \r\n                                    />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    \r\n                    \r\n                }\r\n            \r\n           \r\n            />\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Recents;\r\n\r\nconst recentQuery = graphql`\r\n  query recentQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 4\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Card, Icon, Row, Col } from 'antd'\r\nimport './Sidemenu.css'\r\nimport './Recents'\r\nimport Recents from './Recents';\r\n\r\nconst { Meta } = Card;\r\n\r\nclass Sidemenu extends React.Component {\r\n    render(){\r\n        return(\r\n            <div id=\"sideMenu\" style={ {display: 'inline-block', marginTop: '24px'}}>\r\n                <div className=\"card\" style={ {display: 'inline-block'}}>\r\n                    <div className=\"card-banner\">\r\n                        <div className=\"card-profile\">\r\n                        </div>\r\n\r\n                        <div className=\"card-content\">\r\n                            <h3>Carlos José Salas</h3>\r\n                            <p> Estudiante de Programación de Nicaragua </p>\r\n                        </div>\r\n\r\n                        <div  className=\"card-links\">\r\n                            <Row>\r\n                                <Col span={8}> \r\n                                    <a href=\"https://github.com/josesalasni\" target=\"_blank\"><Icon type=\"github\" style={{fontSize: '2em'}} /></a>\r\n                                </Col>\r\n                                <Col span={8}> \r\n                                    <a href=\"mailto:josesalasni@gmail.com?Subject=Hello%20again\" target=\"_blank\"><Icon type=\"mail\" style={{fontSize: '2em'}} /></a>\r\n                                </Col>\r\n                                <Col span={8}> \r\n                                <a href=\"https://www.facebook.com/salascarlosyy\" target=\"_blank\"><Icon type=\"facebook\" style={{fontSize: '2em'}} /></a>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <Recents/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidemenu;","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport {\r\n    Layout, Menu, Breadcrumb, Icon,  Row, Col, BackTop\r\n} from 'antd';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider, Footer } = Layout;\r\n\r\nimport { rhythm, scale } from '../utils/typography'\r\nimport Sidemenu from './Sidemenu'\r\n\r\nimport 'antd/dist/antd.min.css';\r\nimport './layout.css';\r\n\r\nclass MainLayout extends React.Component {\r\n\r\n    state = {\r\n        current: 'mail',\r\n    }\r\n    \r\n    handleClick = (e) => {\r\n        //No Active\r\n    }\r\n\r\n    render() {\r\n        const { location, title, children } = this.props\r\n        const isRootPath = location.pathname === `${__PATH_PREFIX__}/`\r\n        const pageNumber = location.pathname\r\n        .split('/')\r\n        .filter(Boolean)\r\n        .pop()\r\n        const isPaginatedPath = pageNumber && Boolean(pageNumber.match(/^[0-9]+$/))\r\n        let header\r\n    \r\n        /*\r\n        if (isRootPath || isPaginatedPath) {\r\n        header = (\r\n            <h1\r\n            style={{\r\n                ...scale(1.5),\r\n                marginBottom: rhythm(1.5),\r\n                marginTop: 0,\r\n            }}\r\n            >\r\n            <Link\r\n                style={{\r\n                boxShadow: `none`,\r\n                textDecoration: `none`,\r\n                color: `inherit`,\r\n                }}\r\n                to={`/`}\r\n            >\r\n                {title}\r\n            </Link>\r\n            </h1>\r\n        )\r\n        } else {\r\n        header = (\r\n            <h3\r\n            style={{\r\n                fontFamily: `Montserrat, sans-serif`,\r\n                marginTop: 0,\r\n            }}\r\n            >\r\n            <Link\r\n                style={{\r\n                boxShadow: `none`,\r\n                textDecoration: `none`,\r\n                color: `inherit`,\r\n                }}\r\n                to={`/`}\r\n            >\r\n                {title}\r\n            </Link>\r\n            </h3>\r\n        )\r\n        }\r\n        */\r\n        return (\r\n            <Layout>\r\n                {/*  Menu Sider  */}\r\n                \r\n                {/* Main Layout */}\r\n                <Layout id=\"mainlayout\"  >\r\n                    <Header id=\"header\" style={{ position: 'relative',  background: '#3c8dbc ', padding: 0 , lineHeight: 0 }}>\r\n                    \r\n                    <Menu\r\n                        theme=\"light\"\r\n                        id=\"topbar\"\r\n                        mode=\"horizontal\"\r\n                        onClick={this.handleClick}\r\n                        selectedKeys={[this.state.current]}\r\n                        defaultSelectedKeys={['2']}\r\n                        style={{ lineHeight: '64px', background:'#2d2d2d', WebkitBoxShadow: '0 2px 8px #f0f1f2', boxShadow: '0 2px 8px #f0f1f2' }}\r\n                    >\r\n                        <Menu.Item style={{color: 'white'}} key=\"1\">\r\n                            <Link\r\n                                style={{\r\n                                boxShadow: `none`,\r\n                                textDecoration: `none`,\r\n                                color: `inherit`,\r\n                                }}\r\n                                to={`/`}\r\n                            >\r\n                            {title}\r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        \r\n                        <Menu.Item style={{color: 'white', float: 'right'}} key=\"2\">\r\n                            <a style={{color: 'white'}} target=\"_blank\" href=\"https://josesalasni.github.io\"\r\n                            >\r\n                            Sobre mi\r\n                            </a>\r\n                        </Menu.Item>\r\n\r\n                    </Menu>\r\n                            \r\n                    </Header>\r\n\r\n                    <Content style={{ background: '#fff' }}>\r\n                        <Layout style={{ padding: '24px 0', background: '#fff' }}>\r\n                        \r\n                            <Row>\r\n                                {/* Main Content where render sub components */}\r\n                                <Col lg={18} span={24} >\r\n                                    <div id=\"mainCon\" style={{  borderRight:'1px solid #ebedf0', background: '#fff', paddingLeft: '70px', paddingRight:'70px' ,margin: '24px 24px 24px',  minHeight: 360 }}>\r\n                                        {children}\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col lg={6} span={24}>\r\n                                    <div style={{ textAlign: 'center', margin: '24px, 24px , 24px'}} >\r\n                                        <Sidemenu/>\r\n                                    </div>\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                        \r\n                        </Layout>\r\n                        \r\n                    </Content>\r\n\r\n                     \r\n                    <div>\r\n                        <BackTop />\r\n                    </div>\r\n                        \r\n                    <Footer style={{ background:'#2d2d2d', color: 'white', textAlign: 'center' }}>\r\n                        {new Date().getFullYear() }, Desarrollado por Carlos Salas usando React.Js y Gatsby \r\n                        \r\n                    </Footer>    \r\n                   \r\n                </Layout> \r\n            </Layout>    \r\n        )\r\n    } \r\n}\r\n\r\nexport default MainLayout;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}